###
# Generic proguard options useful in non-release builds
###
-dontobfuscate

-renamesourcefileattribute SourceFile
-keepattributes SourceFile,LineNumberTable,Signature

-flattenpackagehierarchy

-optimizations !code/simplification/arithmetic,!code/simplification/cast,!field/*,!class/merging/*,!code/allocation/variable

-dontnote android.support.**
-dontnote org.apache.http.**
-dontnote android.net.http.**
-dontnote android.annotation.**

-dontnote com.android.vending.licensing.**
-dontnote com.google.vending.licensing.**

# For debugIncludesTests
-keep class * extends junit.framework.TestCase { *; }
-keepclasseswithmembers class * { @org.junit.** *; }
-dontwarn junit.**
-dontnote junit.**
-dontwarn org.junit.**
-dontnote org.junit.**
-dontwarn org.hamcrest.**
-dontwarn com.squareup.**
-dontnote org.hamcrest.**
-keep class android.support.test.** { *; }

###
# Scala-specific proguard config
###
# keep Dynamic because proguard cache fails to handle it gracefully
-keep class scala.Dynamic { *; }
-dontnote scala.concurrent.util.Unsafe
-dontnote scala.Enumeration**
-dontnote scala.ScalaObject
-dontnote org.xml.sax.EntityResolver
-dontnote scala.concurrent.forkjoin.**
-dontwarn scala.beans.ScalaBeanInfo
-dontwarn scala.concurrent.**
-dontnote scala.reflect.**
-dontwarn scala.reflect.**
-dontwarn scala.sys.process.package$
-dontwarn **$$anonfun$*
-dontwarn scala.collection.immutable.RedBlack$Empty
-dontwarn scala.tools.**,plugintemplate.**

-keep public class scala.reflect.ScalaSignature
# This is gone in 2.11
-keep public interface scala.ScalaObject

-keepclassmembers class * {
    ** MODULE$;
}

-keep class scala.collection.SeqLike {
    public java.lang.String toString();
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {
    long eventCount;
    int  workerCounts;
    int  runControl;
    scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode syncStack;
    scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode spareStack;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinWorkerThread {
    int base;
    int sp;
    int runState;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinTask {
    int status;
}

-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue {
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference head;
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference tail;
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference cleanMe;
}
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html

-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

# Optimization is turned off by default. Dex does not like code run
# through the ProGuard optimize and preverify steps (and performs some
# of these optimizations on its own).
-dontoptimize
-dontpreverify
# Note that if you want to enable optimization, you cannot just
# include optimization flags in your own project configuration file;
# instead you will need to point to the
# "proguard-android-optimize.txt" file instead of this one from your
# project.properties file.

-keepattributes *Annotation*
-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService

# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native
-keepclasseswithmembernames class * {
    native <methods>;
}

# keep setters in Views so that animations can still work.
# see http://proguard.sourceforge.net/manual/examples.html#beans
-keepclassmembers public class * extends android.view.View {
   void set*(***);
   *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick
-keepclassmembers class * extends android.app.Activity {
   public void *(android.view.View);
}

# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
  public static final android.os.Parcelable$Creator CREATOR;
}

-keepclassmembers class **.R$* {
    public static <fields>;
}

# The support library contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version.  We know about them, and they are safe.
-dontwarn android.support.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}
# Keep Android backend

-keep class com.badlogic.gdx.backends.android.** { *; }

# Needed descriptor classes

-keep public class com.badlogic.gdx.Input$Orientation

# Port of Android rules from android-proguard.config (android-sdk-plugin)

-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-dontpreverify

-optimizations !code/simplification/arithmetic,!code/simplification/cast,!field/*,!class/merging/*,!code/allocation/variable

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService

-keepclasseswithmembernames class * {
    native <methods>;
}

-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

-keep class * implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator *;
} 

-dontnote android.annotation.**
-dontnote com.android.vending.licensing.**
-dontnote com.google.vending.licensing.**
-dontwarn android.support.**
-dontnote android.support.**

-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

-keepclassmembers class **.R$* {
    public static <fields>;
}

# Port of Android rules from proguard-project.txt (LibGDX template)

-dontwarn android.support.**
-dontwarn com.badlogic.gdx.backends.android.AndroidFragmentApplication

-dontwarn com.badlogic.gdx.graphics.g2d.freetype.**

-keepclassmembers class com.badlogic.gdx.backends.android.AndroidInput* {
    <init>(com.badlogic.gdx.Application, android.content.Context, java.lang.Object, com.badlogic.gdx.backends.android.AndroidApplicationConfiguration);
}

# view AndroidManifest.xml #generated:20
-keep class org.snailya.uniquegamename.AndroidLauncher { <init>(...); }

## Entry point

-keep public class org.snailya.mygame.Main

## LibGDX

-keep class com.badlogic.gdx.Application

# Don't warn about optional

-dontnote com.badlogic.gdx.physics.box2d.World

# Needed descriptor classes

-keep public class com.badlogic.gdx.ApplicationListener
-keep public class com.badlogic.gdx.LifecycleListener
-keep public class com.badlogic.gdx.InputProcessor
-keep public class com.badlogic.gdx.files.FileHandle
-keep public class com.badlogic.gdx.Files$FileType
-keep public class com.badlogic.gdx.Graphics$DisplayMode
-keep public class com.badlogic.gdx.Input$TextInputListener
-keep public class com.badlogic.gdx.Input$Peripheral
-keep public class com.badlogic.gdx.Net$HttpRequest
-keep public class com.badlogic.gdx.Net$HttpResponseListener
-keep public class com.badlogic.gdx.Net$Protocol
-keep public class com.badlogic.gdx.net.SocketHints
-keep public class com.badlogic.gdx.net.ServerSocketHints
-keep public class com.badlogic.gdx.utils.Array
-keep public class com.badlogic.gdx.audio.Music$OnCompletionListener
-keep public class com.badlogic.gdx.graphics.Pixmap

## Scala

# See http://blog.scaloid.org/2014/10/scaloid-36-is-released.html

-keepattributes Signature
-dontwarn scala.collection.**

# Port of Android rules from android-proguard.config (android-sdk-plugin)

-dontobfuscate
-dontoptimize
-renamesourcefileattribute SourceFile
-keepattributes SourceFile,LineNumberTable
-verbose
-flattenpackagehierarchy

-dontnote scala.ScalaObject
-dontnote org.xml.sax.EntityResolver
-dontnote scala.concurrent.forkjoin.**
-dontwarn scala.beans.ScalaBeanInfo
-dontwarn scala.concurrent.**
-dontnote scala.reflect.**
-dontwarn scala.reflect.**
-dontwarn scala.sys.process.package$

-dontwarn **$$anonfun$*
-dontwarn scala.collection.immutable.RedBlack$Empty
-dontwarn scala.tools.**,plugintemplate.**

-keep public class scala.reflect.ScalaSignature
-keep public interface scala.ScalaObject

-keepclassmembers class * {
    ** MODULE$;
}

-keep class scala.collection.SeqLike {
    public java.lang.String toString();
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {
    long eventCount;
    int workerCounts;
    int runControl;
    scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode syncStack;
    scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode spareStack;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinWorkerThread {
    int base;
    int sp;
    int runState;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinTask {
    int status;
}

-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue {
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference head;
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference tail;
    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference cleanMe;
}

# Port of LibGDX rules from proguard-project.txt (LibGDX template)

-dontwarn com.badlogic.gdx.utils.GdxBuild
-dontwarn com.badlogic.gdx.physics.box2d.utils.Box2DBuild
-dontwarn com.badlogic.gdx.jnigen.BuildTarget*

-keepclassmembers class com.badlogic.gdx.physics.box2d.World {
   boolean contactFilter(long, long);
   void    beginContact(long);
   void    endContact(long);
   void    preSolve(long, long);
   void    postSolve(long, long);
   boolean reportFixture(long);
   float   reportRayFixture(long, float, float, float, float, float);
}

-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepattributes *Annotation*

# Keep Android backend

-keep class com.badlogic.gdx.backends.android.** { *; }

# Needed descriptor classes

-keep public class com.badlogic.gdx.Input$Orientation

# Port of Android rules from android-proguard.config (android-sdk-plugin)

-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-dontpreverify

-optimizations !code/simplification/arithmetic,!code/simplification/cast,!field/*,!class/merging/*,!code/allocation/variable

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService

-keepclasseswithmembernames class * {
    native <methods>;
}

-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

-keep class * implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator *;
} 

-dontnote android.annotation.**
-dontnote com.android.vending.licensing.**
-dontnote com.google.vending.licensing.**
-dontwarn android.support.**
-dontnote android.support.**

-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

-keepclassmembers class **.R$* {
    public static <fields>;
}

# Port of Android rules from proguard-project.txt (LibGDX template)

-dontwarn android.support.**
-dontwarn com.badlogic.gdx.backends.android.AndroidFragmentApplication

-dontwarn com.badlogic.gdx.graphics.g2d.freetype.**

-keepclassmembers class com.badlogic.gdx.backends.android.AndroidInput* {
    <init>(com.badlogic.gdx.Application, android.content.Context, java.lang.Object, com.badlogic.gdx.backends.android.AndroidApplicationConfiguration);
}
